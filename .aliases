
alias ta='echo $MACIP; tmux -CC attach'
alias j="jq '.'"
alias tf='tail -f'
alias scs='screen -S'
alias l='ls -lrth'
alias grepi='grep -i'
alias grepv='grep -v'
alias gi='grep -ie'
alias gvi='grep -ive'
alias c='clear'
alias c="clear && printf '\e[3J'"
alias vedal='vim ~/.aliases'
alias edal='sublime ~/.aliases'
alias f='find . -name "*" | grep -v .git | grep -v .metadata | grep -v .pyc | grep -v "Permission denied"| grep -v __pycache__ |  grep -i --color=always'
alias fa='find . -name "*" | grep -i '
alias ft='find . -name "*" -type f | grep -ve log -ve out | grep -v min.css | grep -v .metadata | grep -v .git | grep -v __pycache__ | grep -v "\.pyc" | xargs grep -i --color=always'
alias fta='find . -name "*" -type f | xargs grep -i --color=always'
alias rft='\ls -rt * | xargs grep'
alias ftl='find . -name "*.log" | xargs grep -i --color=always'
alias ftpy='find . -name "*py" -type f | xargs grep -i --color=always'
alias ftgo='find . -name "*go" -type f | xargs grep -i --color=always'
alias ftgo='find . -name "*go" -type f | xargs grep -i --color=always'
alias jsonpp="python -c 'import sys, json; print(json.dumps(json.load(sys.stdin), sort_keys=True, indent=2))'"
alias xmlpp="python -c 'import sys;import xml.dom.minidom;s=sys.stdin.read();print xml.dom.minidom.parseString(s).toprettyxml()'"
alias down='cd ~/Downloads'
alias cd..='cd ..'
alias ..='cd ..'
alias ...='cd .. ; cd ..'
alias ....='cd .. ; cd .. ; cd ..'
alias .....='cd .. ; cd .. ; cd .. ; cd ..'
alias .....='.....'
alias fp='ps -ef | grep -v "grep" | grep '
alias k='sudo kill -9'
alias ls='ls -lrth --color'
alias su='export GOPATH=/local/sapshah/go; proxy; sublime'
alias sa='source ~/.aliases'
alias rl='readlink -e'
alias ti='touch __init__.py'
alias ssls='sudo screen -ls'
alias ssdr='sudo screen -dr'
alias sls='screen -ls'
alias sdr='screen -dr'
alias cb='clipboard'
alias row='awk "NR=='
alias wcl='wc -l'

# Git Aliases
alias b='cd `git rev-parse --show-toplevel`'
alias pr='git log --decorate --graph --pretty=oneline --abbrev-commit --all'
alias prbr='git log --decorate --graph --pretty=oneline --abbrev-commit'
alias co='git checkout '
alias st='git status '
alias stu='git status -uno'
alias sth='git status .'
alias sthu='git status -uno .'
alias brall='git branch -vva '
alias br='git branch -vv '
alias d='git diff --ignore-all-space '
alias dc='git diff --cached --ignore-all-space'
alias hard='git reset --hard'
alias ol='git log --pretty=format:"%h%x09%an%x09%ad%x09%s"'
alias gfc='ol --reverse --no-merges origin/private/antares/ucs_phantom_n9k ^origin/private/aci_fc_npv'
alias gpfc='ol -p --reverse --no-merges origin/private/antares/ucs_phantom_n9k ^origin/private/aci_fc_npv'
alias today='git log --since=6am'
alias gittop='git rev-parse --show-toplevel'
alias my='git log --author=$USER'
alias cf='git diff --name-only'
alias gpr='git pull --rebase'
alias fdx='git clean -fdx'
alias hook='scp -p -P 29418 git:hooks/commit-msg .git/hooks/'
alias au='git add --update :/'
alias com='git add .; git commit'
alias ga='git add'
alias am='git commit --amend'
alias amc='git commit --amend -C HEAD'
alias gamma='git add -A :/ && git commit --amend -C HEAD'
alias gaham='git add --patch . && git commit --amend -C HEAD'
alias gacm='git add . && git commit -m'
alias pu='by ; git push origin $1:refs/for/$1'
alias dr='by ; git push origin $1:refs/drafts/$1'
alias rb='git rebase'
alias p1='git log -p --ignore-all-space -1'
alias s1='git log --stat -1 --stat-name-width=200'
alias s2='git log --stat -2 --stat-name-width=200'
alias sr1='git log --stat --relative -1 --stat-name-width=150'
alias fo='git fetch origin '


function epoch {
    python -c "import time; print(time.strftime('%Y-%m-%d %H:%M:%S', time.localtime($1)))"
}

extract () {
   if [ -f $1 ] ; then
       case $1 in
           *.tar.bz2)   tar xvjf $1    ;;
           *.tar.gz)    tar xvzf $1    ;;
           *.bz2)       bunzip2 $1     ;;
           *.rar)       unrar x $1       ;;
           *.gz)        gunzip $1      ;;
           *.tar)       tar xvf $1     ;;
           *.tbz2)      tar xvjf $1    ;;
           *.tgz)       tar xvzf $1    ;;
           *.zip)       unzip $1       ;;
           *.Z)         uncompress $1  ;;
           *.7z)        7z x $1        ;;
           *)           echo "don't know how to extract '$1'..." ;;
       esac
   else
       echo "'$1' is not a valid file!"
   fi
 }

extract_all() {
    for file in "$@"
    do
        extract $file
    done
}


ff ()
{
    if [ $# -lt 2 ]; then
        echo "Error: $0 [file-type] [pattern]";
        return;
    fi;
    find . -name "$1" | xargs grep "$2"
}




function countdown(){
   date1=$((`date +%s` + $1));
   while [ "$date1" -ge `date +%s` ]; do
     echo -ne "$(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\r";
     sleep 0.1
   done
}

function stopwatch(){
  date1=`date +%s`;
   while true; do
    echo -ne "$(date -u --date @$((`date +%s` - $date1)) +%H:%M:%S)\r";
    sleep 0.1
   done
}

function rename_files(){
    for file in *$1*; do
      mv "$file" "${file//$1/$2}"
    done
}

function find_and_replace(){
    grep -RiIl $1 | xargs sed -i 's/$1/$2/g'
}

function gitnumstats() {
    git log --author="$1" --pretty=tformat: --numstat --since="1 year ago" |  gawk '{ add += $1; subs += $2; loc += $1 - $2 } END { printf "added lines: %s removed lines: %s total lines: %s\n", add, subs, loc }' -
}



function docker_id() {
    docker ps | grep "$1" | cut -f1 -d " "
}

function de() {
    container_id=$(docker_id "$1")
    c=${2:-"/bin/bash"}
    docker exec -it "$container_id" $c
}

function ng() {
    grep $2 $1
}

drmi() {
     docker rmi -f $(docker images  | grep $1)
}

loop() {
     while true; do $@ ; sleep 10; done
}
